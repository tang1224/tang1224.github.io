#general-toolbar {
  position: fixed;

  bottom: var(--margin);
  left: var(--margin);

  z-index: var(--max-z-index);
}

#general-toolbar a {
  text-indent: -9999px;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  z-index: var(--above-above-canvas-z-index);
}

#general-toolbar span {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  display: block;
  width: 148px;
  left: 0;
  font-weight: bold;

  transition: all 150ms ease-in-out;
  opacity: 0;

  pointer-events: none;
}

#general-toolbar:hover span {
  opacity: 1;
  transform: translateY(-50%) translateX(68px);
}

#icon-logo {
  --first-phase: 0.25s;
  --delay: 0.1s;
  --second-phase: 0.25s;
  --third-phase: 0.25s;

  display: block;
  width: 48px;
  height: 48px;
  border-radius: 24px;
  border-color: transparent;

  opacity: 1 !important;

  transition: 150ms ease-in-out;
}

/* TODO: Add in the hover layer. */
#icon-logo:hover svg {
  transform: scale(1.2);
}

@media screen and (max-width: 600px /* --max-content-width */) {
  .builder-app #general-toolbar {
    display: none;
  }
}

button {
  background: transparent;
  border: none;
  cursor: pointer;
}

/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/

html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}
body {
  line-height: 1;
}
ol,
ul {
  list-style: none;
}
blockquote,
q {
  quotes: none;
}
blockquote:before,
blockquote:after,
q:before,
q:after {
  content: '';
  content: none;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}

:root {
  --primary-dark: #000;
  /* --primary-color-rgb: 226, 142, 161; */
  --primary-color-rgb: 114, 221, 195;
  --primary-color: rgba(var(--primary-color-rgb), 1);
  --primary-color-tint: rgba(var(--primary-color-rgb), 0.12);

  --selection-color-rgb: 255, 255, 0;
  --selection-color: rgba(var(--selection-color-rgb));

  --disabled-color: rgba(0, 0, 0, 0.16);

  --line-color: #000;
  --line-width: 1px;

  --base-font-size: 20px;
  --margin: 24px;

  --sans-serif-font: 'Inter', Arial, sans-serif;
  --monospace-font: 'Roboto Mono', monospace;

  /* Update in Util.ts + media query if changed */
  --max-content-width: 600px;
  --min-content-width: 375px;

  --under-canvas-z-index: 2147483647 /* max - 30 */;
  --canvas-z-index: 2147483622 /* max - 25 */;
  --above-canvas-z-index: 2147483627 /* max - 20 */;
  --above-above-canvas-z-index: 2147483632 /* max - 15 */;
  --overlay-z-index: 2147483637 /* max - 10 */;
  --above-overlay-z-index: 2147483642 /* max - 5 */;
  --max-z-index: 2147483647;

  --reference-width: 100vw;
}

html {
  /* TODO: Check to see if this affects performance */
  font-size: var(--max-content-width);

  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  font-family: var(--sans-serif-font);

  zoom: 0.99999999;
  height: 100%;
}

@media screen and (max-width: 600px /* --max-content-width + 1 */) {
  html {
    font-size: var(--reference-width);
  }
}

body {
  font-family: var(--sans-serif-font);
  font-size: var(--base-font-size);
  overflow-x: hidden;

  height: fit-content;

  transition: background 100ms ease-in-out;
}

body,
html {
  min-width: 100%;
  min-height: 100vh;
  overscroll-behavior: none;
  overflow-x: hidden;
}

body#builder-app {
  touch-action: manipulation;
}

input[type='text'],
input[type='password'],
input[type='email'] {
  border: none;
  border-radius: 0;
  background: rgba(0, 0, 0, 0.02);
  border-bottom: 1px solid rgba(0, 0, 0, 0.16);
  font-family: 'Roboto Mono', 'Courier New', monospace;
  outline: none;
  font-size: 16px;
  padding: 8px;
}

/* Mobile Frame */

/* TODO: Add mobile viewer frame */
/* .with-mobile-frame {
  --reference-width: 375px;

  width: 375px;
  height: 812px;
  font-size: var(--reference-width);
}

.with-mobile-frame .page-view {
  width: var(--reference-width);
  height: 812px;

  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  overflow-y: scroll;

  border-radius: 16px;
  border: var(--line-width) solid var(--line-color);
}

.with-mobile-frame .page-view main {
  border: none;
} */

/* TODO: Figure out what to do with scrollbar */
/* *::-webkit-scrollbar {
  width: 8px;
}

*::-webkit-scrollbar-track {
  background: transparent;
}

*::-webkit-scrollbar-thumb {
  background-color: rgba(0, 0, 0, 0.56);
  border-radius: 4px;
}
*/

@media screen and (max-width: 600px /* --max-content-width */) {
  :root {
    --margin: 20px;
  }

  .hide-on-mobile {
    display: none !important;
  }
}

@media screen and (min-width: 601px /* --max-content-width + 1 */) {
  :root {
    --margin: 20px;
  }

  .hide-on-desktop {
    display: none !important;
  }
}

#output .Toastify {
  bottom: var(--margin);
  position: fixed;
  z-index: var(--above-overlay-z-index);
  left: 50%;
  transform: translateX(-50%);
  width: 100%;
}

#output .Toastify__toast-container {
  bottom: 0;
  position: absolute;
  width: auto;
  display: flex;
  flex-direction: column;
  align-items: center;
  left: 50%;
  transform: translateX(-50%);
}

#output .Toastify__toast {
  margin: 0;
  width: max-content;
  background: rgba(0, 0, 0, 0.87);
  color: #fff;
  font-size: 16px;
  min-height: 32px;
  margin-top: 8px;
  border-radius: 4px;

  max-width: calc(100vw - 2 * var(--margin));
  text-align: center;
  line-height: 1.4;
}

#output .Toastify__toast-body {
  display: flex;
}

#output .Toastify__toast .separator {
  height: 16px;
  width: 1px;
  margin: 0 12px;
  background: rgba(255, 255, 255, 0.24);
}

#output .Toastify__toast .link-container {
  display: inline-flex;
}

#output .Toastify__toast .link-container a {
  color: #fff;
  text-decoration: none;
  padding: 8px;
  margin: -8px;
  border-radius: 2px;
  font-weight: 600;
  transition: 100ms ease-in-out;
}

#output .Toastify__toast .link-container a:hover {
  background: rgba(255, 255, 255, 0.16);
}

#output .Toastify__close-button {
  display: none;
}

@media screen and (max-width: 600px /* --max-content-width */) {
  #output .Toastify {
    max-width: 100%;

    /* 64px = Roughly, height of builder toolbar */
    bottom: calc(72px + 2 * var(--margin) + env(safe-area-inset-bottom));
  }
}

.option {
  --label-margin: 20px;
}

.option {
  height: 32px;
  width: 32px;
  padding: 8px;
  outline: none;

  font-size: 24px;

  box-sizing: content-box;
  display: inline-flex;
  text-align: center;
  align-items: center;
  justify-content: center;
  position: relative;

  pointer-events: all;
  will-change: opacity;
  transition: 100ms ease-in-out;
}

.option.use-literal-icon-string {
  font-size: 20px;
  font-weight: 600;
}

.option.enabled {
  opacity: 1 !important;
}

.option.disabled {
  opacity: 0.16 !important;
  pointer-events: none;
  touch-action: none;
}

.option label {
  position: absolute;
  bottom: 50%;
  left: calc(100% + var(--label-margin));
  transform: translateY(50%);

  width: max-content;
  padding: 4px;

  opacity: 0;
  background: rgba(0, 0, 0, 1);
  color: #fff;
  font-weight: bold;
  font-size: 12px;

  border-radius: 4px;

  will-change: opacity;
  pointer-events: none;
}

.option:hover label {
  opacity: 1;
}

@media (hover: none) {
  .option {
    transition: none;
  }

  .option > * {
    display: inline-block;
  }

  .option > label {
    display: none;
  }
}

.color-picker {
  --button-dim: 32px;
  --picker-margin: 24px;
}

.color-picker.small {
  --button-dim: 24px;
}

.color-picker {
  width: var(--button-dim);
  height: var(--button-dim);

  position: relative;
}

.color-picker button {
  display: block;
  width: 100%;
  height: 100%;

  border-radius: 50%;
  content: ' ';
  border: 1px solid #000;
  outline: none;
}

.color-picker .picker {
  /* TODO: Make these variables */
  border-radius: 4px !important;
  box-shadow: 4px 4px 0px rgba(0, 0, 0, 0.24) !important;
  border: var(--line-width) solid var(--line-color) !important;
}

.color-picker .picker-container {
  position: absolute;
}

.color-picker .picker-container:not(.active) {
  display: none;
}

.color-picker.above .picker-container {
  top: 0;
  left: 0;
  transform: translateY(calc(-100% - var(--picker-margin)));
}

.color-picker.below .picker-container {
  top: var(--button-dim);
  left: 0;
  transform: translateY(var(--picker-margin));
}

.color-picker .random-color-btn {
  --base-random-color-btn-transform: translateX(calc(100% + 8px));

  position: absolute;
  width: 48px;
  height: 48px;
  bottom: 8px;
  background: #fff;
  border-radius: 4px !important;
  right: 0;
  transform: var(--base-random-color-btn-transform);
  opacity: 1 !important;
  box-sizing: border-box;
}

.color-picker .random-color-btn label {
  display: none !important;
}

.color-picker .random-color-btn:hover {
  box-shadow: 4px 4px 0px rgb(0 0 0 / 16%);
  transform: var(--base-random-color-btn-transform) translate(-2px, -2px);
}

.color-picker .random-color-btn:active {
  transform: var(--base-random-color-btn-transform) translate(-1px, -1px);
  box-shadow: 3px 3px 0px rgb(0 0 0 / 16%);
}

.color-picker .random-color-btn i {
  padding-top: 4px;
  padding-left: 0px;
}

/* TODO: Find a different way to elevate importance w/o using #output */

#output .mmm-selector {
  pointer-events: all;
  outline: none;
}

#output .mmm-selector__placeholder {
  color: rgba(0, 0, 0, 0.24);
}

#output .mmm-selector__control {
  border-color: transparent;
  box-shadow: none;
  cursor: pointer;
  min-height: 32px;
}

#output .mmm-selector__control:hover {
  background: rgba(0, 0, 0, 0.04);
}

#output .mmm-selector__value-container {
  outline: none;
  box-shadow: none;
}

#output .mmm-selector__indicator {
  padding: 4px;
}

#output .mmm-selector__menu {
  border-radius: 4px;
  overflow: hidden;
  width: max-content;
  width: 100%;
}

#output .mmm-selector__menu .mmm-selector__option {
  cursor: pointer;
}

#output .mmm-selector__menu .mmm-selector__option--is-focused {
  background-color: var(--primary-color-tint);
}

#output .mmm-selector__menu .mmm-selector__option--is-selected {
  background-color: var(--primary-color);
}

#output .mmm-selector__single-value {
  color: #000;
  line-height: 1.5;
}

.thing-view {
  display: block;
  position: absolute;

  transform: translate(-50%, -50%);
  transition: opacity 100ms, box-shadow 100ms;
  /* FIXME: Disable this for now since it makes texts blurry. */
  /* will-change: transform, opacity, z-index, box-shadow; */

  outline: none;
  touch-action: manipulation;

  text-size-adjust: none;
}

.thing-view > div {
  position: absolute;
  top: 0;
  left: 0;

  width: 100%;
  height: 100%;
  display: block;

  outline: none;
}

/* Hyperlink */

/* FIXME: Not meant to be ere */
#builder:not(.preview-mode) a.link-overlay {
  display: none;
}

.thing-view.hyperlinked a.link-overlay {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  z-index: var(--above-canvas-z-index);
}

.thing-view.hyperlinked > div {
  transition: transform 150ms ease-in-out;
}

.thing-view.hyperlinked:hover > div {
  transform: scale(1.03);
}

/* Specific Content types */

/* FIXME: Move this! */
#builder:not(.preview-mode) .thing-view img,
#builder:not(.preview-mode) .thing-view iframe {
  pointer-events: none;
  touch-action: none;
}

#builder .thing-view.hyperlinked:hover > div {
  transform: scale(1);
}

.thing-view .youtube-thing,
.thing-view .youtube-thing > div {
  height: 100% !important;
  width: 100% !important;
}

.thing-view .image-thing img {
  width: 100%;
  height: 100%;
}

.thing-view .text-thing {
  white-space: pre-wrap;
  line-height: 1.25;
  /* 
    Hacky. 
    TLDR: grows the text box ever so slightly to allow for wiggle room
    in text reflowing. Long-term may want to auto-size text better.
  */
  width: 100.5%;
}

.thing-view .shape-thing svg {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
}

/* Button Thing */

.thing-view .button-thing {
  text-align: center;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: calc(1rem * 4 / 375);
  font-weight: 600;
  box-shadow: 0 4px 8px rgb(0 0 0 / 8%);
}

.thing-view .button-thing.light-bg {
  color: #000;
}

.thing-view .button-thing.dark-bg {
  text-shadow: 1px 1px 2px rgb(0 0 0 / 24%);
  color: #fff;
}

.thing-view .button-thing.square span {
  display: none;
}

.thing-view .button-thing span {
  line-height: 0.1rem;
  margin-left: 40px;
  outline: none;
  max-width: 80%;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
}

.thing-view .button-thing.instagram-bg {
  background: linear-gradient(
    45deg,
    #fda948 13%,
    #f66748 21%,
    #ec3653 64%,
    #c13a9c 84%
  );
}

/* FIXME: These icons must size to the button */
.thing-view .button-thing i {
  width: 0.085333333rem;
  height: 0.085333333rem;
  font-size: 0.0512rem;
  display: flex;
  align-items: center;
  position: absolute;
  left: 0.0275rem;
  justify-content: center;
}

.page-view {
  position: relative;
  width: 100%;
  min-height: 100vh;
  box-sizing: border-box;

  display: flex;
  justify-content: center;
  align-items: flex-start;

  transition: 100ms ease-in-out;
  overflow: hidden;

  z-index: var(--canvas-z-index);

  touch-action: manipulation;
}

.page-view main {
  max-width: var(--max-content-width);
  width: 100%;

  transition: border-color 100ms ease-in-out;
  position: relative;

  touch-action: manipulation;
}

.page-view main.page-length-decreasing {
  /* 
    NOTE: Any change in the transition duration should be reflected
    in PageView.tsx as well 
  */
  --height-decreased-animation-duration: 250ms;
  transition: height var(--height-decreased-animation-duration) ease-in-out;
}

.page-view main h1 {
  text-indent: 9999px;
}

.page-view .message {
  font-family: var(--sans-serif-font);
  font-size: 0.14rem;
  text-transform: uppercase;
  white-space: pre-line;
  box-sizing: border-box;
  padding: 0.1rem;
  color: rgba(0, 0, 0, 0.08);
}



 //# sourceMappingURL=~/build/viewer/main.css.map
